swagger: '2.0'

info:
  version: "1.0.0"
  title: Nature
  description: "
    The Blogs API provides a programmatic interface to the Blogs indexing and aggregation services, enabling developers to search for blogs, posts, stories, and papers that are published on Nature Network or indexed in the blog catalogue.

    The API supports a wide range of search queries based on content tags and keywords, index metadata, PubMed ID, and so on."

host: localhost
basePath: /lraeval/api/nature
schemes:
  - http
produces:
  - application/json
externalDocs:
  description: Documentation of the original data source
  url: http://www.nature.com/developers/documentation/api-references/blogs-api/

paths:
  /blogs/{id}.json:
    get:
      summary: Retrieve blog
      description: Retrieves the blog with ID.

      tags:
        - Blogs

      parameters:
        - name: id
          in: path
          description: The ID of the requested blog
          required: true
          type: string

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/SingleBlogResponse'

  /blogs/blogs.json:
    get:
      summary: Retrieve blogs
      description: Retrieves all blogs with the parameter strings in their descriptions.

      tags:
        - Blogs

      parameters:
        - name: q
          in: query
          description: Terms in the blog title
          required: false
          type: string

        - name: tags
          in: query
          description: Tags in the blog
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MultipleBlogResponse'

  /blogs/posts.json:
    get:
      summary: Retrieve blog posts
      description: Search for posts from blogs with the specific tag.

      tags:
        - Blogs
      parameters:
        - name: blog_tag
          in: query
          description: Use blog_tag to search for posts based on tags of the containing blog; use tag to search for posts based on tags of the actual post
          required: false
          type: string

        - name: pmid
          in: query
          description: Use pmid to request all posts that reference the paper that matches the given PMID
          required: false
          type: string

        - name: added_after
          in: query
          description: The added_after parameter expects a date in a standard date format, for example YYYY-MM-DD and matches published_at dates
          required: false
          type: string

        - name: blog
          in: query
          description: Use blog to specify a blog by numerical id, not the blog name e.g. “blog=1237” for “Bio Job Blog”
          required: false
          type: string

        - name: term
          in: query
          description: Use term to search against key words automatically parsed from blog posts as word bursts, performing a simple matching search
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MultiplePostResponse'

  /blogs/papers.json:
    get:
      summary: Retrieve papers
      description: Search for papers with the specific tag.

      tags:
        - Blogs

      parameters:
        - name: added_after
          in: query
          description: The added_after parameter expects a date in a standard date format, for example YYYY-MM-DD and matches published_at dates
          required: false
          type: string

        - name: added_before
          in: query
          description: The added_before parameter expects a date in a standard date format, for example YYYY-MM-DD and matches published_at dates
          required: false
          type: string

        - name: doi
          in: query
          description: a DOI in the expected format
          required: false
          type: string

        - name: pmid
          in: query
          description: Use pmid to request all papers matching the given PMID
          required: false
          type: string

        - name: paper
          in: query
          description: the ID of a paper
          required: false
          type: string

        - name: tag
          in: query
          description: Use blog_tag to search for posts based on tags of the containing blog; use tag to search for posts based on tags of the actual post
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MultiplePaperResponse'


definitions:
  SingleBlogResponse:
    properties:
      blog:
        $ref: '#/definitions/Blog'

  MultipleBlogResponse:
    type: array
    items:
      properties:
        blog:
          $ref: '#/definitions/Blog'

  MultiplePostResponse:
    type: array
    items:
      properties:
        post:
          $ref: '#/definitions/Post'

  MultiplePaperResponse:
    type: array
    items:
      properties:
        paper:
          $ref: '#/definitions/Paper'

  Paper:
    properties:
      popularity:
        type: integer
      created_at:
        type: string
        format: date-time
      title:
        type: string
      updated_at:
        type: string
        format: date-time
      journal:
        type: string
      url:
        type: string
      pmid:
        type: string
      id:
        type: integer
      hashed_id:
        type: string
      doi:
        type: string
      authors:
        type: string

  Post:
    properties:
      blog:
        $ref: '#/definitions/Blog'
      links_to_doi:
        type: array
        items:
          type: string
      percent_complex_words:
        type: number
        format: float
      popularity:
        type: integer
      created_at:
        type: string
        format: date-time
      title:
        type: string
      body:
        type: string
      updated_at:
        type: string
        format: date-time
      flesch:
        type: number
        format: float
      url:
        type: string
      blog_id:
        type: integer
      id:
        type: integer
      hashed_id:
        type: string
      num_words:
        type: integer
      published_at:
        type: string
        format: date-time
      fog:
        type: number
        format: float

  Blog:
    properties:
      percent_complex_words:
        type: number
        format: float
      popularity:
        type: integer
        format: int32
      created_at:
        type: string
        format: date-time
      title:
        type: string
      niche_tag:
        type: string
      updated_at:
        type: string
        format: date-time
      flesch:
        type: number
        format: float
      feed_url:
        type: string
      url:
        type: string
      decided_on:
        type: string
        format: date-time
      rank:
        type: integer
      num_posts_per_week:
        type: number
        format: float
      id:
        type: integer
      tags:
        type: array
        items:
          properties:
            name:
              type: string
            id:
              type: integer
      outgoing_bloglove:
        type: integer
      num_words:
        type: number
        format: float
      ip:
        type: string
      niche_rank:
        type: integer
      header_title:
        type: string
      fog:
        type: number
        format: float
      description:
        type: string
      user_thumb:
        type: string
      status:
        type: string
